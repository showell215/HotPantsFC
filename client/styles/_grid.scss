//$grid-columns: 12;
//$grid-max-width: 100rem;
//
//$breakpoint-mobile-sm: "only screen and (min-width: 20rem)";
//$breakpoint-mobile-lg: "only screen and (min-width: 35rem)";
//$breakpoint-tablet: "only screen and (min-width: 48.75rem)";
//$breakpoint-desktop: "only screen and (min-width:62.5rem)";
//
//
//.wrapper {
//  width: 100%;
//  max-width: $grid-max-width;
//  margin: 0 auto;
//}
//
//.wrapper:after,
//.row:after {
//  content: "";
//  display: table;
//  clear: both;
//}
//

//
//@media #{$breakpoint-tablet} {
//  @for $i from 1 through $grid-columns {
//
//    .col-#{$i} {
//      width: 200% / $grid-columns * $i;
//    }
//  }
//}
//
//@media #{$breakpoint-desktop} {
//  @for $i from 1 through $grid-columns {
//
//    .col-#{$i} {
//      width: 100% / $grid-columns * $i;
//    }
//  }
//}

$items: 12;

$breakpoints: (
    sm: 320px,
    md: 580px,
    lg: 760px,
    xl: 1000px,
    xx: 1440px
);

[class*='col-'] {
  //float: left;
  padding: .5rem;
  width: 100%;
  max-width: 100%;
  min-height: 1px;
}

@mixin break($size) {
  @media (min-width: map-get($breakpoints, $size)) {
    @content;
  }
}

.grid {
  display: flex;
  flex-flow: row wrap;
}

// loop over the breakpoints
@each $key, $value in $breakpoints {
  @for $i from $items through 1 {
    .col-#{$key}-#{$i} {
      //flex: 0 0 100%;
      @include break($key) {
        flex: 0 0 #{$i / $items * 100%};
      }
    }
  }
}